@page "/catalogo"
@inject IProductService productService

<PageTitle>Catálogo de Produtos</PageTitle>

<div class="container mx-auto mt-8 min-h-screen">
    <div class="flex flex-col lg:flex-row gap-6">
        <div class="w-full lg:w-1/4 bg-gray-100 p-4 rounded-lg">
            <h4 class="text-lg font-semibold mb-4">Filtros</h4>
        </div>

        <div class="w-full lg:w-3/4">
            <div class="flex justify-between items-center mb-6">
                <h4 class="text-xl font-semibold">Produtos</h4>
                <div class="flex space-x-2">
                    <button class="px-4 py-2 bg-gray-200 rounded-md hover:bg-gray-300">Novo</button>
                    <button class="px-4 py-2 bg-gray-200 rounded-md hover:bg-gray-300">Preço ↑</button>
                    <button class="px-4 py-2 bg-gray-200 rounded-md hover:bg-gray-300">Preço ↓</button>
                </div>
            </div>

            @if (products == null || products.Count == 0)
            {
                <p>Carregando produtos...</p>
            }
            else
            {
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                    @foreach (var product in products)
                    {
                        <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                            <img src="@("/" + product.Imagem_Url)" alt="@product.Descricao" class="w-75 h-80 object-cover" />
                            <div class="p-4">
                                <h5 class="text-lg font-semibold">@product.Descricao</h5>
                                <p class="text-sm text-gray-600 mt-2">Descrição</p>
                                <p class="text-lg font-bold text-blue-600 mt-4">€@product.Preco</p>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {

    private List<DesktopModel> products = new List<DesktopModel>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            products = await productService.GetAllProducts();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar produtos: {ex.Message}");
        }
    }
}
