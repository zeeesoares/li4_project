@page "/navCliente"

@using Microsoft.AspNetCore.Components.Forms
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components

@inject IJSRuntime js
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthProvider


<div class="mx-auto flex max-w-full items-center justify-between border-b-2 border-black pb-2 px-20">
    <div class="flex">
        <a href="/" class="flex items-center">
            <img class="h-20 w-auto" src="assets/logo.png" alt="Logo">
        </a>
    </div>

    <div class="flex gap-x-20 flex-grow justify-center relative">
        <NavLink href="/catalogo" Match="NavLinkMatch.All" class="no-underline font-bold font-sans text-gray-800 py-2 px-4 relative">
            Catálogo
            <span class="absolute left-0 bottom-0 w-0 h-1 bg-black transition-all duration-300 hover:w-full @((NavigationManager.Uri.Contains("/catalogo")) ? "w-full" : "")"></span>
        </NavLink>
        <NavLink href="/encMenu" Match="NavLinkMatch.All" class="no-underline font-bold font-sans text-gray-800 py-2 px-4 relative">
            Linha de Montagem
            <span class="absolute left-0 bottom-0 w-0 h-1 bg-black transition-all duration-300 hover:w-full @((NavigationManager.Uri.Contains("/encMenu")) ? "w-full" : "")"></span>
        </NavLink>
        <NavLink href="/nova-encomenda" Match="NavLinkMatch.All" class="no-underline font-bold font-sans text-gray-800 py-2 px-4 relative">
            Encomenda
            <span class="absolute left-0 bottom-0 w-0 h-1 bg-black transition-all duration-300 hover:w-full @((NavigationManager.Uri.Contains("/nova-encomenda")) ? "w-full" : "")"></span>
        </NavLink>
    </div>
    <div class="flex items-center space-x-5">
        <img class="h-12 w-12 rounded-full" src="assets/client.jpg" alt="Avatar do utilizador">
        <div class="flex flex-col">
            <p class="text-black font-bold font-sans text-s">@Username</p>
            <p class="cursor-pointer hover:underline text-black font-bold font-sans text-xs" @onclick="Logout">Sair</p>
        </div>
    </div>
</div>



@code {
    private string Username { get; set; } = "Utilizador";

    protected override async Task OnInitializedAsync()
    {
        var ourProvider = (Auth.AuthMain)AuthProvider;
        Username = await ourProvider.GetUsername() ?? "Utilizador";
    }

    private async Task Logout()
    {
        if (AuthProvider is Auth.AuthMain ourProvider)
        {
            await ourProvider.Logout();
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            await js.InvokeVoidAsync("alert", "Erro ao sair. Provider não encontrado.");
        }
    }
}
