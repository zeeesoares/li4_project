@page "/navAdmin"

@using Microsoft.AspNetCore.Components.Forms
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components

@inject IJSRuntime js
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthProvider

<div class="w-full border-b-2 border-black pb-2">
    <div class="mx-auto flex max-w-7xl items-center justify-between">
        <div class="flex">
            <a href="/" class="flex items-center">
                <img class="h-20 w-auto transform -translate-y-2" src="assets/logo.png" alt="Logo">
            </a>
        </div>

        <div class="flex gap-x-28">
            <NavLink href="/catalogo" ActiveClass="active-link" Match="NavLinkMatch.All"
                     class="hover:underline font-bold font-sans transform -translate-y-1/2">Catálogo</NavLink>
            <NavLink href="/encMenu" ActiveClass="active-link" Match="NavLinkMatch.All"
                     class="hover:underline font-bold font-sans transform -translate-y-1/2">Linha de Montagem</NavLink>
            <NavLink href="/encMenu" ActiveClass="active-link" Match="NavLinkMatch.All"
                     class="hover:underline font-bold font-sans transform -translate-y-1/2">Stock</NavLink>
        </div>

        <div class="flex items-center space-x-10">
            <img class="h-10 w-10 rounded-full" src="assets/admin.png" alt="Avatar do usuário">
            <div class="flex flex-col">
                <p class="text-black font-bold font-sans text-xs">@Username</p>
                <p class="cursor-pointer hover:underline text-black font-bold font-sans text-xs" @onclick="Logout">Sair</p>
            </div>
        </div>
    </div>
</div>

@code {
    private string Username { get; set; } = "Usuário";

    protected override async Task OnInitializedAsync()
    {
        var ourProvider = (Auth.AuthMain)AuthProvider;
        Username = await ourProvider.GetUsername() ?? "Usuário";
    }

    private async Task Logout()
    {
        if (AuthProvider is Auth.AuthMain ourProvider)
        {
            await ourProvider.Logout();
            NavManager.NavigateTo("/", true);
        }
        else
        {
            await js.InvokeVoidAsync("alert", "Erro ao sair. Provider não encontrado.");
        }
    }
}