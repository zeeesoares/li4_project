@page "/acompanharProduto"
@using System.Collections.Generic

<div class="p-6 max-w-4xl mx-auto">
    <!-- Header Section with darker gray rectangle and aligned text -->
    <div class="bg-gray-300 p-4 rounded-lg">
        <div class="flex justify-between items-center">
            <div class="text-left w-1/3">
                <span class="text-lg font-semibold">Peça: @GetCurrentPieceName()</span>
            </div>
            <div class="text-center w-1/3">
                <span class="text-lg font-semibold">Passo número @(CurrentStepIndex + 1)</span>
            </div>
            <div class="text-right w-1/3">
                <span class="text-lg font-semibold">Estado: @CurrentProduct.Status</span>
            </div>
        </div>
    </div>

    <!-- Progress Bar (shorter) -->
    <div class="mt-6">
        <div class="relative h-2 bg-gray-200 rounded-full w-3/4 mx-auto">
            <div class="absolute top-0 left-0 h-2 bg-green-500 rounded-full" style="width: @(100 * (CurrentStepIndex + 1) / Steps.Count)%"></div>
        </div>
    </div>

    <!-- Navigation Buttons (text and arrows only) -->
    <div class="mt-6 flex justify-between items-center">
        <button class="px-2 py-2 text-gray-700 hover:text-gray-900" @onclick="PreviousStep" disabled="@(CurrentStepIndex == 0)">
            &#8592; Previous
        </button>

        <!-- Image -->
        <div class="flex-grow flex justify-center">
            <img src="/assets/logo.png" alt="Product Image" class="w-96 h-auto object-contain" />
        </div>

        <!-- Next Button -->
        <button class="px-2 py-2 text-gray-700 hover:text-gray-900" @onclick="NextStep" disabled="@(CurrentStepIndex == Steps.Count - 1)">
            Next &#8594;
        </button>
    </div>

    <!-- Step Indicators -->
    <div class="flex justify-center mt-6">
        <div class="flex space-x-1">
            @for (int i = 0; i < Steps.Count; i++)
            {
                <div class="w-3 h-3 rounded-full @(i == CurrentStepIndex ? "bg-gray-800" : "bg-gray-400")"></div>
            }
        </div>
    </div>
</div>


@code {
    private Product CurrentProduct = new Product
        {
            Name = "Desktop - #1",
            Description = "Computador King Mod Office-PC i5 12400 16GB DDR4 512GB UHD W11 Pro",
            Status = "Montar Componentes"
        };

    private List<string> Steps = new List<string>
    {
        "Espera",
        "Montar Caixa",
        "Montar Motherboard",
        "Montar Componentes",
        "Cable Management",
        "Pronto"
    };

    private int CurrentStepIndex => Steps.IndexOf(CurrentProduct.Status);

    private void PreviousStep()
    {
        if (CurrentStepIndex > 0)
        {
            CurrentProduct.Status = Steps[CurrentStepIndex - 1];
        }
    }

    private void NextStep()
    {
        if (CurrentStepIndex < Steps.Count - 1)
        {
            CurrentProduct.Status = Steps[CurrentStepIndex + 1];
        }
    }

    private string GetCurrentPieceName()
    {
        return CurrentProduct.Status switch
        {
            "Espera" => "Nenhuma Peça",
            "Montar Caixa" => "Caixa",
            "Montar Motherboard" => "Motherboard",
            "Montar Componentes" => "Componentes",
            "Cable Management" => "Cabos",
            "Pronto" => "Pronto",
            _ => "Desconhecido"
        };
    }

    private string GetStatusColor(string status)
    {
        return status switch
        {
            "Espera" => "yellow-500",
            "Montar Caixa" => "yellow-500",
            "Montar Motherboard" => "yellow-500",
            "Montar Componentes" => "yellow-500",
            "Cable Management" => "yellow-500",
            "Pronto" => "green-500",
            _ => "red-500"
        };
    }

    private class Product
    {
        public string Name { get; set; }
        public string Description { get; set; }
        public string Status { get; set; }
    }
}
